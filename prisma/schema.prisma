// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  Writer
  Editor
}

enum Status {
  Active
  Inactive
}

enum ArticleStatus {
  ForEdit
  Published
}

model User {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  email         String    @unique
  password      String
  firstname     String
  lastname      String
  type          UserType  @default(Writer)
  status        Status    @default(Active)
  WriterArticle Article[] @relation(name: "WriterArticle")
  EditorArticle Article[] @relation(name: "EditorArticle")

  @@map("users")
}

model Company {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  logo      String
  name      String
  status    Status    @default(Active)
  Article   Article[]

  @@map("companies")
}

model Article {
  id        Int           @id @default(autoincrement())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  image     String
  title     String
  link      String
  date      DateTime      @default(now())
  content   String        @db.Text
  status    ArticleStatus @default(ForEdit)
  writer    User          @relation(name: "WriterArticle", fields: [writerId], references: [id])
  writerId  Int
  editor    User?         @relation(name: "EditorArticle", fields: [editorId], references: [id])
  editorId  Int?
  company   Company       @relation(fields: [companyId], references: [id])
  companyId Int

  @@map("articles")
}
